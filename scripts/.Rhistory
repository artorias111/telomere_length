intronends <- exonstarts[2:(nrow(exonends))]
allintrons <- data.frame("starts" = intronstarts, "ends" = intronends) %>%
dplyr::mutate(midpoint = (starts+ends)/2)
endUTR <- data.frame("x" = c(selection$codingend, selection$codingend, selection$txend), "y" = c(1, -1, 0))
plot <- ggplot(allexons)+
#geom_segment(aes(x = txstart, xend = txend, y = 0, yend = 0), data = selection, color = "black")+
geom_rect( aes(xmin =  starts, xmax = ends, ymin = -1 , ymax = 1), fill = gene_color, color = "black", alpha = gene_alpha)+
geom_segment(aes(x = starts, y = 1, xend = midpoint, yend = 2), data = allintrons, color = intron_color)+
geom_segment(aes(x = midpoint, y = 2, xend = ends, yend = 1), data = allintrons, color = intron_color)+
geom_rect(aes(xmin = txstart, xmax = codingstart, ymin = -1, ymax = 1), data = selection, fill = utr3_color)+
geom_rect(aes(xmin = codingend, xmax = txend, ymin = -1, ymax = 1), data = selection, fill= "white", color = "white", lwd = 1.2)+
geom_polygon(aes(x = x, y = y), data = endUTR, fill = utr5_color, color = "black")+
theme_void()
return(plot)
} else {
selection$txend <- as.numeric(selection$txend)
selection$codingend <- as.numeric(selection$codingend)
exonstarts <- matrix(as.numeric(unlist(strsplit(selection$exonstarts, ",")), ncol = selection$numexons))
exonends <- matrix(as.numeric(unlist(strsplit(selection$exonends, ",")), ncol = selection$numexons))
allexons <- data.frame("starts" = exonstarts, "ends" = exonends)
intronstarts <- exonends[1:(nrow(exonends)-1)]
intronends <- exonstarts[2:(nrow(exonends))]
allintrons <- data.frame("starts" = intronstarts, "ends" = intronends) %>%
dplyr::mutate(midpoint = (starts+ends)/2)
endUTR <- data.frame("x" = c(selection$codingstart, selection$codingstart, selection$txstart), "y" = c(1, -1, 0))
plot <- ggplot(allexons)+
geom_segment(aes(x = txend, xend = txstart, y = 0, yend = 0), data = selection, color = "black")+
geom_rect( aes(xmin =  starts, xmax = ends, ymin = -1 , ymax = 1), fill = gene_color, color = "black", alpha = gene_alpha)+
geom_segment(aes(x = starts, y = 1, xend = midpoint, yend = 2), data = allintrons, color = intron_color)+
geom_segment(aes(x = midpoint, y = 2, xend = ends, yend = 1), data = allintrons, color = intron_color)+
geom_rect(aes(xmin = txend, xmax = codingend, ymin = -1, ymax = 1), data = selection, fill = utr3_color)+
geom_rect(aes(xmin = codingstart, xmax = txstart, ymin = -1, ymax = 1), data = selection, fill= "white", color = "white", lwd = 1.2)+
geom_polygon(aes(x = x, y = y), data = endUTR, fill = utr5_color, color = "black")+
theme_void()
return(plot)
}
}
#save(gene_model,file="../functions/gene_model.Rdata")
goi_list <- tibble(
gene='',
chr='',
strand='+',
txstart=0,
txend=0,
codingstart=txstart,
codingend=txend,
numexons=0,
wbgene='Wb000',
gene_name=gene,
biotype='protein_coding',
exonstarts='',
exonends='',
type='Transcript'
)
goi_list <- goi_list %>% add_row(
gene='pot2',
chr='II',
strand='+',
txstart=14524173,
txend=14525108,
codingstart=14524173,
codingend=14525108,
numexons=3,
wbgene='Wb000',
gene_name=gene,
biotype='protein_coding',
exonstarts='14524173,14524585,14524884',
exonends='14524539,14524832,14525108',
type='transcript'
)
#save(goi_list,file="../processed_data/goi_list.Rdata")
#what needs to be added: gene, chr, txtstart,txtend,codingstart,codingend,numexons,exonstarts,exonends,
#gene models
#manhattan plots
library("tidyverse")
library("plotly")
library("DT")
library("ggbeeswarm")
library("knitr")
library("ggrepel")
library("genetics")
library("ggnewscale")
library("cowplot")
gene_model <- function(df, genename = NA, WBID = NA, gene_color = "blue", intron_color = "black",
utr3_color = "gray60", utr5_color = "gray60", gene_alpha = 0.5) {
if(is.na(genename)){
if(is.na(WBID)) {
stop("No gene provided. Give either gene name or WB ID")
} else {
selection <- df %>%
dplyr::filter(wbgene == WBID)
}
} else {
selection <- df %>%
dplyr::filter(gene == genename)
}
if(nrow(selection) > 1){
stop("multiple entries with given gene name.")
}
if(selection$strand == "+"){
selection$txend <- as.numeric(selection$txend)
selection$codingend <- as.numeric(selection$codingend)
exonstarts <- matrix(as.numeric(unlist(strsplit(selection$exonstarts, ",")), ncol = selection$numexons))
exonends <- matrix(as.numeric(unlist(strsplit(selection$exonends, ",")), ncol = selection$numexons))
allexons <- data.frame("starts" = exonstarts, "ends" = exonends)
intronstarts <- exonends[1:(nrow(exonends)-1)]
intronends <- exonstarts[2:(nrow(exonends))]
allintrons <- data.frame("starts" = intronstarts, "ends" = intronends) %>%
dplyr::mutate(midpoint = (starts+ends)/2)
endUTR <- data.frame("x" = c(selection$codingend, selection$codingend, selection$txend), "y" = c(1, -1, 0))
plot <- ggplot(allexons)+
#geom_segment(aes(x = txstart, xend = txend, y = 0, yend = 0), data = selection, color = "black")+
geom_rect( aes(xmin =  starts, xmax = ends, ymin = -1 , ymax = 1), fill = gene_color, color = "black", alpha = gene_alpha)+
geom_segment(aes(x = starts, y = 1, xend = midpoint, yend = 2), data = allintrons, color = intron_color)+
geom_segment(aes(x = midpoint, y = 2, xend = ends, yend = 1), data = allintrons, color = intron_color)+
geom_rect(aes(xmin = txstart, xmax = codingstart, ymin = -1, ymax = 1), data = selection, fill = utr3_color)+
geom_rect(aes(xmin = codingend, xmax = txend, ymin = -1, ymax = 1), data = selection, fill= "white", color = "white", lwd = 1.2)+
geom_polygon(aes(x = x, y = y), data = endUTR, fill = utr5_color, color = "black")+
theme_void()
return(plot)
} else {
selection$txend <- as.numeric(selection$txend)
selection$codingend <- as.numeric(selection$codingend)
exonstarts <- matrix(as.numeric(unlist(strsplit(selection$exonstarts, ",")), ncol = selection$numexons))
exonends <- matrix(as.numeric(unlist(strsplit(selection$exonends, ",")), ncol = selection$numexons))
allexons <- data.frame("starts" = exonstarts, "ends" = exonends)
intronstarts <- exonends[1:(nrow(exonends)-1)]
intronends <- exonstarts[2:(nrow(exonends))]
allintrons <- data.frame("starts" = intronstarts, "ends" = intronends) %>%
dplyr::mutate(midpoint = (starts+ends)/2)
endUTR <- data.frame("x" = c(selection$codingstart, selection$codingstart, selection$txstart), "y" = c(1, -1, 0))
plot <- ggplot(allexons)+
geom_segment(aes(x = txend, xend = txstart, y = 0, yend = 0), data = selection, color = "black")+
geom_rect( aes(xmin =  starts, xmax = ends, ymin = -1 , ymax = 1), fill = gene_color, color = "black", alpha = gene_alpha)+
geom_segment(aes(x = starts, y = 1, xend = midpoint, yend = 2), data = allintrons, color = intron_color)+
geom_segment(aes(x = midpoint, y = 2, xend = ends, yend = 1), data = allintrons, color = intron_color)+
geom_rect(aes(xmin = txend, xmax = codingend, ymin = -1, ymax = 1), data = selection, fill = utr3_color)+
geom_rect(aes(xmin = codingstart, xmax = txstart, ymin = -1, ymax = 1), data = selection, fill= "white", color = "white", lwd = 1.2)+
geom_polygon(aes(x = x, y = y), data = endUTR, fill = utr5_color, color = "black")+
theme_void()
return(plot)
}
}
save(gene_model,file="../functions/gene_model.Rdata")
goi_list <- tibble(
gene='',
chr='',
strand='+',
txstart=0,
txend=0,
codingstart=txstart,
codingend=txend,
numexons=0,
wbgene='Wb000',
gene_name=gene,
biotype='protein_coding',
exonstarts='',
exonends='',
type='Transcript'
)
goi_list <- goi_list %>% add_row(
gene='pot2',
chr='II',
strand='+',
txstart=14524173,
txend=14525108,
codingstart=14524173,
codingend=14525108,
numexons=3,
wbgene='Wb000',
gene_name=gene,
biotype='protein_coding',
exonstarts='14524173,14524585,14524884',
exonends='14524539,14524832,14525108',
type='transcript'
)
#save(goi_list,file="../processed_data/goi_list.Rdata")
#what needs to be added: gene, chr, txtstart,txtend,codingstart,codingend,numexons,exonstarts,exonends,
gene_model <- function(df, genename = NA, WBID = NA, gene_color = "blue", intron_color = "black",
utr3_color = "gray60", utr5_color = "gray60", gene_alpha = 0.5) {
if(is.na(genename)){
if(is.na(WBID)) {
stop("No gene provided. Give either gene name or WB ID")
} else {
selection <- df %>%
dplyr::filter(wbgene == WBID)
}
} else {
selection <- df %>%
dplyr::filter(gene == genename)
}
if(nrow(selection) > 1){
stop("multiple entries with given gene name.")
}
if(selection$strand == "+"){
selection$txend <- as.numeric(selection$txend)
selection$codingend <- as.numeric(selection$codingend)
exonstarts <- matrix(as.numeric(unlist(strsplit(selection$exonstarts, ",")), ncol = selection$numexons))
exonends <- matrix(as.numeric(unlist(strsplit(selection$exonends, ",")), ncol = selection$numexons))
allexons <- data.frame("starts" = exonstarts, "ends" = exonends)
intronstarts <- exonends[1:(nrow(exonends)-1)]
intronends <- exonstarts[2:(nrow(exonends))]
allintrons <- data.frame("starts" = intronstarts, "ends" = intronends) %>%
dplyr::mutate(midpoint = (starts+ends)/2)
endUTR <- data.frame("x" = c(selection$codingend, selection$codingend, selection$txend), "y" = c(1, -1, 0))
plot <- ggplot(allexons)+
#geom_segment(aes(x = txstart, xend = txend, y = 0, yend = 0), data = selection, color = "black")+
geom_rect( aes(xmin =  starts, xmax = ends, ymin = -1 , ymax = 1), fill = gene_color, color = "black", alpha = gene_alpha)+
geom_segment(aes(x = starts, y = 1, xend = midpoint, yend = 2), data = allintrons, color = intron_color)+
geom_segment(aes(x = midpoint, y = 2, xend = ends, yend = 1), data = allintrons, color = intron_color)+
geom_rect(aes(xmin = txstart, xmax = codingstart, ymin = -1, ymax = 1), data = selection, fill = utr3_color)+
geom_rect(aes(xmin = codingend, xmax = txend, ymin = -1, ymax = 1), data = selection, fill= "white", color = "white", lwd = 1.2)+
geom_polygon(aes(x = x, y = y), data = endUTR, fill = utr5_color, color = "black")+
theme_void()
return(plot)
} else {
selection$txend <- as.numeric(selection$txend)
selection$codingend <- as.numeric(selection$codingend)
exonstarts <- matrix(as.numeric(unlist(strsplit(selection$exonstarts, ",")), ncol = selection$numexons))
exonends <- matrix(as.numeric(unlist(strsplit(selection$exonends, ",")), ncol = selection$numexons))
allexons <- data.frame("starts" = exonstarts, "ends" = exonends)
intronstarts <- exonends[1:(nrow(exonends)-1)]
intronends <- exonstarts[2:(nrow(exonends))]
allintrons <- data.frame("starts" = intronstarts, "ends" = intronends) %>%
dplyr::mutate(midpoint = (starts+ends)/2)
endUTR <- data.frame("x" = c(selection$codingstart, selection$codingstart, selection$txstart), "y" = c(1, -1, 0))
plot <- ggplot(allexons)+
geom_segment(aes(x = txend, xend = txstart, y = 0, yend = 0), data = selection, color = "black")+
geom_rect( aes(xmin =  starts, xmax = ends, ymin = -1 , ymax = 1), fill = gene_color, color = "black", alpha = gene_alpha)+
geom_segment(aes(x = starts, y = 1, xend = midpoint, yend = 2), data = allintrons, color = intron_color)+
geom_segment(aes(x = midpoint, y = 2, xend = ends, yend = 1), data = allintrons, color = intron_color)+
geom_rect(aes(xmin = txend, xmax = codingend, ymin = -1, ymax = 1), data = selection, fill = utr3_color)+
geom_rect(aes(xmin = codingstart, xmax = txstart, ymin = -1, ymax = 1), data = selection, fill= "white", color = "white", lwd = 1.2)+
geom_polygon(aes(x = x, y = y), data = endUTR, fill = utr5_color, color = "black")+
theme_void()
return(plot)
}
}
#gene models
#manhattan plots
library("tidyverse")
library("plotly")
library("DT")
library("ggbeeswarm")
library("knitr")
library("ggrepel")
library("genetics")
library("ggnewscale")
library("cowplot")
gene_model <- function(df, genename = NA, WBID = NA, gene_color = "blue", intron_color = "black",
utr3_color = "gray60", utr5_color = "gray60", gene_alpha = 0.5) {
if(is.na(genename)){
if(is.na(WBID)) {
stop("No gene provided. Give either gene name or WB ID")
} else {
selection <- df %>%
dplyr::filter(wbgene == WBID)
}
} else {
selection <- df %>%
dplyr::filter(gene == genename)
}
if(nrow(selection) > 1){
stop("multiple entries with given gene name.")
}
if(selection$strand == "+"){
selection$txend <- as.numeric(selection$txend)
selection$codingend <- as.numeric(selection$codingend)
exonstarts <- matrix(as.numeric(unlist(strsplit(selection$exonstarts, ",")), ncol = selection$numexons))
exonends <- matrix(as.numeric(unlist(strsplit(selection$exonends, ",")), ncol = selection$numexons))
allexons <- data.frame("starts" = exonstarts, "ends" = exonends)
intronstarts <- exonends[1:(nrow(exonends)-1)]
intronends <- exonstarts[2:(nrow(exonends))]
allintrons <- data.frame("starts" = intronstarts, "ends" = intronends) %>%
dplyr::mutate(midpoint = (starts+ends)/2)
endUTR <- data.frame("x" = c(selection$codingend, selection$codingend, selection$txend), "y" = c(1, -1, 0))
plot <- ggplot(allexons)+
#geom_segment(aes(x = txstart, xend = txend, y = 0, yend = 0), data = selection, color = "black")+
geom_rect( aes(xmin =  starts, xmax = ends, ymin = -1 , ymax = 1), fill = gene_color, color = "black", alpha = gene_alpha)+
geom_segment(aes(x = starts, y = 1, xend = midpoint, yend = 2), data = allintrons, color = intron_color)+
geom_segment(aes(x = midpoint, y = 2, xend = ends, yend = 1), data = allintrons, color = intron_color)+
geom_rect(aes(xmin = txstart, xmax = codingstart, ymin = -1, ymax = 1), data = selection, fill = utr3_color)+
geom_rect(aes(xmin = codingend, xmax = txend, ymin = -1, ymax = 1), data = selection, fill= "white", color = "white", lwd = 1.2)+
geom_polygon(aes(x = x, y = y), data = endUTR, fill = utr5_color, color = "black")+
theme_void()
return(plot)
} else {
selection$txend <- as.numeric(selection$txend)
selection$codingend <- as.numeric(selection$codingend)
exonstarts <- matrix(as.numeric(unlist(strsplit(selection$exonstarts, ",")), ncol = selection$numexons))
exonends <- matrix(as.numeric(unlist(strsplit(selection$exonends, ",")), ncol = selection$numexons))
allexons <- data.frame("starts" = exonstarts, "ends" = exonends)
intronstarts <- exonends[1:(nrow(exonends)-1)]
intronends <- exonstarts[2:(nrow(exonends))]
allintrons <- data.frame("starts" = intronstarts, "ends" = intronends) %>%
dplyr::mutate(midpoint = (starts+ends)/2)
endUTR <- data.frame("x" = c(selection$codingstart, selection$codingstart, selection$txstart), "y" = c(1, -1, 0))
plot <- ggplot(allexons)+
geom_segment(aes(x = txend, xend = txstart, y = 0, yend = 0), data = selection, color = "black")+
geom_rect( aes(xmin =  starts, xmax = ends, ymin = -1 , ymax = 1), fill = gene_color, color = "black", alpha = gene_alpha)+
geom_segment(aes(x = starts, y = 1, xend = midpoint, yend = 2), data = allintrons, color = intron_color)+
geom_segment(aes(x = midpoint, y = 2, xend = ends, yend = 1), data = allintrons, color = intron_color)+
geom_rect(aes(xmin = txend, xmax = codingend, ymin = -1, ymax = 1), data = selection, fill = utr3_color)+
geom_rect(aes(xmin = codingstart, xmax = txstart, ymin = -1, ymax = 1), data = selection, fill= "white", color = "white", lwd = 1.2)+
geom_polygon(aes(x = x, y = y), data = endUTR, fill = utr5_color, color = "black")+
theme_void()
return(plot)
}
}
save(gene_model,file="../functions/gene_model.Rdata")
goi_list <- tibble(
gene='',
chr='',
strand='+',
txstart=0,
txend=0,
codingstart=txstart,
codingend=txend,
numexons=0,
wbgene='Wb000',
gene_name=gene,
biotype='protein_coding',
exonstarts='',
exonends='',
type='Transcript'
)
goi_list <- goi_list %>% add_row(
gene='pot2',
chr='II',
strand='+',
txstart=14524173,
txend=14525108,
codingstart=14524173,
codingend=14525108,
numexons=3,
wbgene='Wb000',
gene_name=gene,
biotype='protein_coding',
exonstarts='14524173,14524585,14524884',
exonends='14524539,14524832,14525108',
type='transcript'
)
#save(goi_list,file="../processed_data/goi_list.Rdata")
#what needs to be added: gene, chr, txtstart,txtend,codingstart,codingend,numexons,exonstarts,exonends,
save(gene_model,file="../functions/gene_model.Rdata")
goi_list <- tibble(
gene='',
chr='',
strand='+',
txstart=0,
txend=0,
codingstart=txstart,
codingend=txend,
numexons=0,
wbgene='Wb000',
gene_name=gene,
biotype='protein_coding',
exonstarts='',
exonends='',
type='Transcript'
)
goi_list <- goi_list %>% add_row(
gene='pot2',
chr='II',
strand='+',
txstart=14524173,
txend=14525108,
codingstart=14524173,
codingend=14525108,
numexons=3,
wbgene='Wb000',
gene_name=gene,
biotype='protein_coding',
exonstarts='14524173,14524585,14524884',
exonends='14524539,14524832,14525108',
type='transcript'
)
#save(goi_list,file="../processed_data/goi_list.Rdata")
#manhattan plots
library("tidyverse")
library("plotly")
library("DT")
library("ggbeeswarm")
library("knitr")
library("ggrepel")
library("genetics")
library("ggnewscale")
library("cowplot")
#C. elegans fine mapping gene plot
genes_in_region <- data.table::fread(glue::glue("/Users/shrirambhat/Desktop/telomere/data/tropicalis/nemascan_runs/Analysis_Results-20220308/Fine_Mappings/Data/length_I_775059-2137061_bcsq_genes.tsv"))
#genes_in_region <- data.table::fread(glue::glue("{trait_name}_{QTL_chrom}_{QTL_start}-{QTL_end}_bcsq_genes.tsv"))
gene_df <- genes_in_region %>%
dplyr::filter(START_POS == unique(genes_in_region$START_POS)) %>%
dplyr::distinct(WBGeneID, GENE_NAME, PEAK_MARKER, CHROM, STRAND, TRANSCRIPTION_START_POS,
TRANSCRIPTION_END_POS, START_POS, END_POS, VARIANT_LOG10p) %>%
dplyr::group_by(WBGeneID) %>%
dplyr::mutate(VARIANT_LOG10p = max(VARIANT_LOG10p, na.rm = T)) %>%
dplyr::distinct()
peak_variant <- as.numeric(strsplit(unique(gene_df$PEAK_MARKER), split = ":")[[1]][2])
variant_df <- genes_in_region %>%
dplyr::filter(START_POS == unique(genes_in_region$START_POS)) %>%
dplyr::distinct(CHROM, POS, GENE_NAME, WBGeneID, VARIANT_LOG10p, VARIANT_IMPACT)
variant_df$VARIANT_IMPACT[is.na(variant_df$VARIANT_IMPACT)] <- "Intergenic"
xs <- unique(gene_df$START_POS)
xe <- unique(gene_df$END_POS)
cq <- unique(gene_df$CHROM)
max_logp <- unique(max(variant_df$VARIANT_LOG10p, na.rm = T))/150
gene_plot <- ggplot(gene_df) +
aes(text = paste0(GENE_NAME, "\n", WBGeneID)) +
geom_vline(aes(xintercept = peak_variant/1e6),
linetype=1, color = "blue")+
geom_segment(aes(x = ifelse(STRAND == "+", TRANSCRIPTION_START_POS/1e6, TRANSCRIPTION_END_POS/1e6),
xend = ifelse(STRAND == "+", TRANSCRIPTION_END_POS/1e6, TRANSCRIPTION_START_POS/1e6),
y = VARIANT_LOG10p,
yend = VARIANT_LOG10p),
arrow = arrow(length = unit(5, "points")), size = 1) +
geom_segment(aes(x = POS/1e6,
xend = POS/1e6,
y = VARIANT_LOG10p+max_logp,
yend = VARIANT_LOG10p-max_logp,
color = VARIANT_IMPACT), data = variant_df) +
# if snpeff, need to add back moderate and modifier
scale_color_manual(values = c("LOW" = "gray30",
"HIGH" = "red",
"Linker" = "gray80",
"Intergenic" = "gray80"),
breaks = c("HIGH", "LOW", "Intergenic"),
name = "")+
labs(x = "Genome position (Mb)",
y = expression(-log[10](italic(p)))) +
# )+
theme_bw(18)+
xlim(c(xs/1e6, xe/1e6)) +
theme(legend.position = "none",
panel.grid = element_blank(),
text = element_text(size = 7))
gene_plot
ggsave("../plots/trop_fineplot2.png",dpi=300,height=2,width = 7.5, units = "in")
ggsave("../plots2/trop_fineplot.png",dpi=300,height=3,width = 7.5, units = "in")
library("tidyverse")
library("plotly")
library("DT")
library("ggbeeswarm")
library("knitr")
library("ggrepel")
library("genetics")
library("ggnewscale")
library("cowplot")
genes_in_region <- data.table::fread(glue::glue("/Users/shrirambhat/Desktop/telomere/data/tropicalis/nemascan_runs/Analysis_Results-20220308/Fine_Mappings/Data/length_I_775059-2137061_bcsq_genes.tsv"))
genes_in_region <- data.table::fread(glue::glue("../data/tropicalis/nemascan_runs/Analysis_Results-20220308/Fine_Mappings/Data/length_I_775059-2137061_bcsq_genes.tsv"))
#manhattan plots
library("tidyverse")
library("plotly")
library("DT")
library("ggbeeswarm")
library("knitr")
library("ggrepel")
library("genetics")
library("ggnewscale")
library("cowplot")
#C. elegans fine mapping gene plot
genes_in_region <- data.table::fread(glue::glue("../data/tropicalis/nemascan_runs/Analysis_Results-20220308/Fine_Mappings/Data/length_I_775059-2137061_bcsq_genes.tsv"))
#genes_in_region <- data.table::fread(glue::glue("{trait_name}_{QTL_chrom}_{QTL_start}-{QTL_end}_bcsq_genes.tsv"))
gene_df <- genes_in_region %>%
dplyr::filter(START_POS == unique(genes_in_region$START_POS)) %>%
dplyr::distinct(WBGeneID, GENE_NAME, PEAK_MARKER, CHROM, STRAND, TRANSCRIPTION_START_POS,
TRANSCRIPTION_END_POS, START_POS, END_POS, VARIANT_LOG10p) %>%
dplyr::group_by(WBGeneID) %>%
dplyr::mutate(VARIANT_LOG10p = max(VARIANT_LOG10p, na.rm = T)) %>%
dplyr::distinct()
peak_variant <- as.numeric(strsplit(unique(gene_df$PEAK_MARKER), split = ":")[[1]][2])
variant_df <- genes_in_region %>%
dplyr::filter(START_POS == unique(genes_in_region$START_POS)) %>%
dplyr::distinct(CHROM, POS, GENE_NAME, WBGeneID, VARIANT_LOG10p, VARIANT_IMPACT)
variant_df$VARIANT_IMPACT[is.na(variant_df$VARIANT_IMPACT)] <- "Intergenic"
xs <- unique(gene_df$START_POS)
xe <- unique(gene_df$END_POS)
cq <- unique(gene_df$CHROM)
max_logp <- unique(max(variant_df$VARIANT_LOG10p, na.rm = T))/150
gene_plot <- ggplot(gene_df) +
aes(text = paste0(GENE_NAME, "\n", WBGeneID)) +
geom_vline(aes(xintercept = peak_variant/1e6),
linetype=1, color = "blue")+
geom_segment(aes(x = ifelse(STRAND == "+", TRANSCRIPTION_START_POS/1e6, TRANSCRIPTION_END_POS/1e6),
xend = ifelse(STRAND == "+", TRANSCRIPTION_END_POS/1e6, TRANSCRIPTION_START_POS/1e6),
y = VARIANT_LOG10p,
yend = VARIANT_LOG10p),
arrow = arrow(length = unit(5, "points")), size = 1) +
geom_segment(aes(x = POS/1e6,
xend = POS/1e6,
y = VARIANT_LOG10p+max_logp,
yend = VARIANT_LOG10p-max_logp,
color = VARIANT_IMPACT), data = variant_df) +
# if snpeff, need to add back moderate and modifier
scale_color_manual(values = c("LOW" = "gray30",
"HIGH" = "red",
"Linker" = "gray80",
"Intergenic" = "gray80"),
breaks = c("HIGH", "LOW", "Intergenic"),
name = "")+
labs(x = "Genome position (Mb)",
y = expression(-log[10](italic(p)))) +
# )+
theme_bw(18)+
xlim(c(xs/1e6, xe/1e6)) +
theme(legend.position = "none",
panel.grid = element_blank(),
text = element_text(size = 7))
gene_plot
ggsave("../plots/trop_fineplot2.png",dpi=300,height=2,width = 7.5, units = "in")
ggsave("../plots2/trop_fineplot.png",dpi=300,height=3,width = 7.5, units = "in")
gene_plot
